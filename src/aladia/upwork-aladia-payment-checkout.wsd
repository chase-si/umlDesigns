@startuml
title "basic logic of the checkout"

box "Frontend"
participant otherPages
participant editCoursePopup
participant courseDetailPage
end box

box "Stripe"
participant stripSignupPage
participant stripPaymentPage
end box

box "Store"
' participant authStore
' participant orgStore
' participant hubPaymentStore
end box

box "Backend"
participant API
end box

== pre operations ==
autonumber 1.1
activate otherPages
note over otherPages
check details of the "become a teacher" development docs
end note 
otherPages -> otherPages: signup/login
otherPages -> otherPages: learningPage or teachingPage
otherPages -> otherPages: click become a teacher
otherPages -> stripSignupPage: navigate to stripPage
stripSignupPage -> stripSignupPage: fill all the required fields
otherPages <- stripSignupPage: navigate to teachingSpace page
deactivate otherPages

== fill billing ==
autonumber 2.1
note over otherPages
<color red>TODO: add required fields limitions</red>
<color red>TODO: add docs for billing API requests</red>
end note 
otherPages -> editCoursePopup: create new Course 
activate editCoursePopup
editCoursePopup -> editCoursePopup: fill data
editCoursePopup -> editCoursePopup: save data
editCoursePopup -> editCoursePopup: publish
deactivate editCoursePopup

== checkout ==
autonumber 3.1
editCoursePopup -> courseDetailPage: navigate to courseDetailPage
activate courseDetailPage
courseDetailPage -> courseDetailPage : click "buy now"
courseDetailPage -> API: POST "/v2/payment/customers/checkout" { courseId: "string" }
courseDetailPage <- API: POST res, { url: "string" }
courseDetailPage -> stripPaymentPage: navigate to stripPaymentPage with url
note over stripPaymentPage
test pay: https://docs.stripe.com/testing
end note 
stripPaymentPage -> stripPaymentPage: pay
stripPaymentPage -> API: sth...
API -> API: sth...I don't know
API -> API: maybe insert db "pending" data in transations table
deactivate courseDetailPage

alt pay successful
stripPaymentPage -> stripPaymentPage: success
stripPaymentPage -> API: sth...
API -> API: sth...I don't know
API -> API: insert/change db "successful" data in transations table
otherPages <- API: GET "v2/payment/transactions"
otherPages -> otherPages: render in payment view UI
else pay failed
...
end

note over courseDetailPage
<color red>TODO: logic when pay failed or succssful</color>
end note 

@enduml