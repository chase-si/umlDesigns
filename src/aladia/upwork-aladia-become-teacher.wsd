@startuml
title "basic logic of became teacher"

box "Frontend"
participant hubPage
participant teachingPopup
participant stripePage
end box

box "Store & Cookie"
participant cookie
participant authStore
participant orgStore
participant profileStore
participant followersStore
participant experiencesStore
end box

box "Backend"
participant API
participant stripeAPI
end box

== basic ==
activate hubPage
note over hubPage
/pages/organization/hub/[name].vue
end note
hubPage -> hubPage : init()
autonumber 1.1
hubPage -> hubPage : get id from `$route.params.name`
  activate profileStore
    hubPage -> profileStore : retrieveProfile(id)
    profileStore -> profileStore : retrieveProfile(id)
      activate API
      profileStore -> API : get `/profiles/${id}`
      profileStore <- API : get `/profiles/${id}`res
      deactivate API
    note over profileStore
      now stripeConnectOnboard = null
    end note
    profileStore -> profileStore : update deatails...
    profileStore -> followersStore : update somthing..
    profileStore -> experiencesStore: update somthing..
  deactivate profileStore
hubPage <- profileStore : async request finish

note over hubPage
todo...logic of context, related APIs:
`/auth/switch-context`,
`/auth/switch-context/${id}`
end note
hubPage -> authStore : switchContext(id)
hubPage <- authStore : async request finish
deactivate hubPage
autonumber stop

== show popups(teacher as example) ==
autonumber 2.1
hubPage -> hubPage : updatePopup()
activate hubPage
note over hubPage
logic to show which popup:
  const learningPopup = useCookie('learning-popup');
  this.orgStore.popup.learning =
    this.popup === 'learning' && !learningPopup.value;

  // teaching popup
  this.orgStore.popup.teaching =
    this.popup === 'teaching' && this.isStudent;

  // org popup
  this.orgStore.popup.organization = this.popup === 'organization';
end note
hubPage <- cookie : get`learning-popup` as cookieValue
hubPage <- orgStore : popup.teaching, popup.learning, popup.learning
hubPage -> orgStore : orgStore.popup.teaching => true
deactivate hubPage

note over teachingPopup
/components/Organization/Hub/Popup/Teaching/index.vue
end note
teachingPopup <- orgStore: popup.teaching === true, show
activate teachingPopup
teachingPopup -> teachingPopup: click button, becomeTeacher()
teachingPopup -> profileStore: fill country, then becomeTeacher(country)
note over API
once request
profile.type => "teacher"
profile.stripeConnectOnboard : null => "requirement-needed"
end note
profileStore -> API: POST `/profiles/teachers`
profileStore <- API: post Res
profileStore -> teachingPopup: post Res
note over teachingPopup
<color red>solve default behavior by browser, which will block to open new window</color>
end note
teachingPopup -> teachingPopup: window.open(res.oboardUrl)
  teachingPopup -> stripePage: new tab in browser
  activate stripePage
  stripePage -> stripePage : signup or fill datas
  note over stripePage
  until to the last step and fill all the required datas
  profile.stripeConnectOnboard : "requirement-needed" => "completed"

  TODO: if not "completed", could visit from profile
  end note
  stripePage -> stripePage : each step could click to save
  stripePage -> stripePage : redirect to the our page
  stripePage -> stripePage : close the tab
  deactivate stripePage

note over teachingPopup
loop to check profile.type === "teacher"
end note
teachingPopup -> teachingPopup: referesh the page, load data as a teacher
@enduml